<?php

/**
 * BasePlace
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $city
 * @property string $address
 * @property decimal $latitude
 * @property decimal $longitude
 * @property boolean $selected
 * @property Doctrine_Collection $Invitations
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlace extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('places');
        $this->hasColumn('id', 'integer', 12, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'unsigned' => true,
             'length' => '12',
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('type_id', 'integer', null, array(
             'type' => 'integer',
             'length'=>'5'
             ));
        $this->hasColumn('city_id', 'integer', null, array(
             'type' => 'integer',
             'length'=>'5'
             ));
        $this->hasColumn('address', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('comments', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('latitude', 'decimal', 8, array(
             'type' => 'decimal',
             'length' => '8',
             'scale' => '6',
             ));
        $this->hasColumn('longitude', 'decimal', 8, array(
             'type' => 'decimal',
             'length' => '8',
             'scale' => '6',
             ));
        $this->hasColumn('priority', 'integer', null, array(
            'type' => 'integer',
            'length'=>'2'
        ));
        $this->hasColumn('selected', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
        $this->hasMany('Invitation as Invitations', array(
             'local' => 'id',
             'foreign' => 'placeId'));
        
        $this->hasMany('Placetype as Placetypes', array(
             'local' => 'id',
             'foreign' => 'type_id'));
//        
        $this->hasMany('City as Cities', array(
             'local' => 'id',
             'foreign' => 'type_id'));
    }
}
